#setting the prefix from C-b to C-a
set -g prefix C-a
unbind C-b
#setting delay between prefix and command
set -sg escape-time 0
#setting scroll-back buffer size
set -g history-limit 50000
#setting base-index for windows as 1 instead of 0
set -g base-index 1
#setting base-index for panes as 1 instead of 0
setw -g pane-base-index 1
#binding g to reload tmuxconf source file
bind g source-file ~/.tmux.conf \; display "Reloaded!"
#tmux messages are displayed for 4 seconds
set -g display-time 4000
#Ensure that C-a can be sent to other apps
bind C-a send-prefix
#Splitting panes with | and -
bind | split-window -h
bind - split-window -v
#Moving between panes with h,j,k,l
bind h select-pane -L
bind l select-pane -R
bind j select-pane -D
bind k select-pane -U
#Quick window selection
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+
#Bindings to resize windows
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
# mouse support - set to on if you want to use the mouse
set -g mouse off
#Set the status line's colours
set -g status-style fg=white,bold,bg=black
#Set the windew status style as cyan and active window as red
set -g window-status-style fg=cyan,bold,bg=black
set -g window-status-current-style fg=white,bold,bg=red 
#colors for pane borders
setw -g pane-border-style fg=cyan,bg=black
setw -g pane-active-border-style fg=cyan,bg=black
#active window normal and other shaded out
#setw -g window-style fg='#585858',bg='#262626'
#setw -g window-active-style fg=white,bg=black
#set status keys as vi
set -g status-keys vi
# Command / message line
set -g message-style fg=white,bold,bg=black
# Status line left side to show Session
set -g status-left-length 10
set -g status-left "#[fg=green]#S"
# Status line right side - 31-Oct 13:37
set -g status-right "#[fg=cyan]%d %b %R" #should see how this works
set -g status-right-length 14
# Update the status line every sixty seconds
set -g status-interval 5
# focus events enabled for terminals that support them
set -g focus-events on
# Center the window list in the status line
set -g status-justify centre
# enable activity alerts (should see how this works)
setw -g monitor-activity on
set -g visual-activity on
set -g window-status-activity-style fg=white,bold,bg=cyan
#enable vi keys
setw -g mode-keys vi
bind N previous-window 
bind u copy-mode 
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-pipe "xclip -in -selection clipboard"
unbind p
bind-key p paste-buffer             # paste; (default hotkey: ] )
unbind P
bind-key P choose-buffer            # tmux clipboard history
bind-key + delete-buffer \; display-message "Deleted current Tmux Clipboard History"
bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"
# split pane and retain the current directory of existing pane
bind _ split-window -v -c "#{pane_current_path}"
bind \\ split-window -h -c "#{pane_current_path}"
# cycling through sessions with the ( and )
bind ( switch-client -p
        bind ) switch-client -n

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
bind-key -n 'C-\' if-shell "$is_vim" 'send-keys C-\\' 'select-pane -lnd-key -T copy-mode-vi 'C-h''
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind C-l send-keys 'C-l'
